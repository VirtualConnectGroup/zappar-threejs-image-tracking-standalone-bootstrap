"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const styles_1 = require("./styles");
const svgLib = require("./images");
class ElementFactory {
    constructor(customStyle) {
        if (customStyle) {
            for (const key of Object.keys(customStyle)) {
                for (const key2 of Object.keys(customStyle[key])) {
                    const property = customStyle[key][key2];
                    if (property) {
                        styles_1.default[key][key2] = property;
                    }
                }
            }
        }
    }
    static createElement(tag, properties) {
        const element = document.createElement(tag);
        Object.assign(element, properties);
        Object.assign(element.style, properties.style);
        return element;
    }
    static createSVG(svgStr, properties) {
        const div = document.createElement('div');
        const doc = new DOMParser().parseFromString(svgStr, 'application/xml');
        div.appendChild(div.ownerDocument.importNode(doc.documentElement, true));
        const SVG = div.firstChild;
        Object.assign(SVG.style, properties.style);
        return SVG;
    }
    static _getContainerPreview() {
        return ElementFactory.createElement('div', {
            style: styles_1.default.containerDiv, id: 'ZapparSnapshotContainer',
        });
    }
    static _getSvgClose(callback) {
        const a = ElementFactory.createElement('div', {
            style: styles_1.default.buttonCloseAnchor, id: 'zapparCloseAref', onclick: () => callback(),
        });
        const svg = ElementFactory.createSVG(svgLib.getCloseSvgStr(), { style: styles_1.default.buttonCloseImage });
        a.appendChild(svg);
        return a;
    }
    static _getContainerFlex() {
        return ElementFactory.createElement('div', {
            style: styles_1.default.flexContainerDiv,
        });
    }
    static _getButtonSave(data, fileName, customText) {
        const buttonSave = ElementFactory.createElement('a', {
            style: styles_1.default.saveShareAnchor,
            id: 'zapparSaveButton',
            href: data,
            download: fileName,
            target: '_blank',
        });
        const svg = ElementFactory.createSVG(svgLib.getSaveSvgStr(customText), { style: styles_1.default.saveShareAnchor });
        buttonSave.appendChild(svg);
        return buttonSave;
    }
    static _getPreviewVideo(src) {
        var _a;
        const videoPreview = ElementFactory.createElement('video', {
            style: styles_1.default.previewElement, id: 'ZapparPreviewVideo',
        });
        videoPreview.controls = true;
        const source = document.createElement('source');
        source.src = src;
        videoPreview.appendChild(source);
        (_a = document.getElementById('ZapparSnapshotContainer')) === null || _a === void 0 ? void 0 : _a.appendChild(videoPreview);
        return videoPreview;
    }
    static _getPreviewImage(src) {
        var _a;
        const imagePreview = ElementFactory.createElement('img', {
            style: styles_1.default.previewElement, src, id: 'ZapparPreviewImg',
        });
        (_a = document.getElementById('ZapparSnapshotContainer')) === null || _a === void 0 ? void 0 : _a.appendChild(imagePreview);
        return imagePreview;
    }
    static _getShareButton(customText) {
        const buttonShare = ElementFactory.createElement('a', {
            style: styles_1.default.saveShareAnchor, id: 'zapparShareButton',
        });
        const svg = ElementFactory.createSVG(svgLib.getShareSvgStr(customText), { style: styles_1.default.saveShareAnchor });
        buttonShare.appendChild(svg);
        return buttonShare;
    }
    static _getOpenFilesButton() {
        const buttonOpenFiles = ElementFactory.createElement('a', {
            style: styles_1.default.buttonOpenFiles, id: 'zapparOpenFilesButton', href: 'shareddocuments://', innerText: 'Open Files App',
        });
        return buttonOpenFiles;
    }
    static _getInstructionsP() {
        const p = ElementFactory.createElement('p', {
            style: styles_1.default.instructions, id: 'zapparInstructionsp',
        });
        return p;
    }
}
exports.default = ElementFactory;
//# sourceMappingURL=elementFactory.js.map